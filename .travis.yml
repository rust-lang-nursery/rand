language: rust
sudo: false

# We aim to test all the following in any combination:
# - standard tests, benches, documentation, all available features
# - pinned stable, latest stable, beta and nightly Rust releases
# - Linux, OS X, Android, iOS, bare metal (i.e. no_std)
# - x86_64, ARMv7, a Big-Endian arch (MIPS)
matrix:
  include:
    - rust: 1.22.0
      env: DESCRIPTION="pinned stable Rust release"
      install:
      script:
        - cargo test --lib --no-default-features
        - cargo test --features=serde1,log
        - cargo test --examples
        - cargo test --package rand_core
        - cargo test --package rand_core --no-default-features
        - cargo test --package rand_isaac --features serde1
#        - cargo test --package rand_xorshift --features serde1

    - rust: stable
      env: DESCRIPTION="stable Rust release, macOS"
      os: osx
      install:
      script:
        - cargo test --lib --no-default-features
        - cargo test --features=serde1,log
        - cargo test --examples
        - cargo test --package rand_core
        - cargo test --package rand_core --no-default-features
        - cargo test --package rand_isaac --features serde1
#        - cargo test --package rand_xorshift --features serde1

    - rust: beta
      env: DESCRIPTION="beta Rust release"
      install:
      script:
        - cargo test --lib --no-default-features
        - cargo test --features=serde1,log
        - cargo test --examples
        - cargo test --package rand_core
        - cargo test --package rand_core --no-default-features
        - cargo test --package rand_isaac --features serde1
#        - cargo test --package rand_xorshift --features serde1

    - rust: nightly
      env: DESCRIPTION="nightly features, benchmarks, documentation"
      install:
        - cargo --list | egrep "^\s*deadlinks$" -q || cargo install cargo-deadlinks
      before_script:
        - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH
      script:
        - cargo test --lib --no-default-features --features alloc
        - cargo test --features=serde1,log,nightly
        - cargo test --benches --features=nightly
        - cargo test --examples
        - cargo test --package rand_core
        - cargo test --package rand_core --no-default-features --features=alloc
        - cargo test --package rand_isaac --features=serde1
        - cargo test --package rand_xorshift --features=serde1
        # remove cached documentation, otherwise files from previous PRs can get included
        - rm -rf target/doc
        - cargo doc --no-deps --all --all-features
        - cargo deadlinks --dir target/doc
      after_success:
        - travis-cargo --only nightly doc-upload

    - rust: nightly
      env: DESCRIPTION="WASM via emscripten, stdweb and wasm-bindgen"
      install:
        - rustup target add wasm32-unknown-unknown
        - rustup target add wasm32-unknown-emscripten
        # cargo-web takes Â±10 min. to install, and cargo and cargo-update offer
        # no reliable update-or-install command. We ignore updating for now
        # (just drop the Travis' caches when necessary)
        - cargo --list | egrep "^\s*web$" -q || cargo install cargo-web
      addons:
          chrome: stable
      script:
        - cargo web test --target wasm32-unknown-emscripten
        - cargo web test --nodejs --target wasm32-unknown-emscripten
        - cargo web test --nodejs --target wasm32-unknown-unknown --features=stdweb
        - cargo build --target wasm32-unknown-unknown --features=wasm-bindgen

    - rust: nightly
      env: DESCRIPTION="cross-platform builder (doesn't run tests)"
      install:
        - rustup target add aarch64-apple-ios \
#                            armv7-linux-androideabi \
                            wasm32-unknown-emscripten \
                            x86_64-sun-solaris \
                            x86_64-unknown-cloudabi \
                            x86_64-unknown-freebsd \
                            x86_64-unknown-fuchsia \
                            x86_64-unknown-redox \
                            x86_64-unknown-netbsd
      script:
        - cargo build --target=aarch64-apple-ios
#        - cargo build --target=armv7-linux-androideabi
        - cargo build --target=wasm32-unknown-emscripten
        - cargo build --target=x86_64-sun-solaris
        - cargo build --target=x86_64-unknown-cloudabi
        - cargo build --target=x86_64-unknown-freebsd
        - cargo build --target=x86_64-unknown-fuchsia
        - cargo build --target=x86_64-unknown-redox
        - cargo build --target=x86_64-unknown-netbsd

    # Trust cross-built/emulated targets. We must repeat all non-default values.
    - rust: stable
      sudo: required
      dist: trusty
      services: docker
      env: DESCRIPTION="big-endian" TARGET=mips-unknown-linux-gnu
    - rust: stable
      sudo: required
      dist: trusty
      services: docker
      env: TARGET=x86_64-unknown-freebsd
    - rust: stable
      sudo: required
      dist: trusty
      services: docker
      env: TARGET=armv7-linux-androideabi
    - rust: stable
      os: osx
      sudo: required
      dist: trusty
      services: docker
      env: TARGET=armv7-apple-ios

before_install:
  - set -e
  - rustup self update

# Used by all Trust targets; others must override:
install:
  - sh utils/ci/install.sh
  - source ~/.cargo/env || true
script:
  - bash utils/ci/script.sh

after_script: set +e

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

env:
  global:
    secure: "BdDntVHSompN+Qxz5Rz45VI4ZqhD72r6aPl166FADlnkIwS6N6FLWdqs51O7G5CpoMXEDvyYrjmRMZe/GYLIG9cmqmn/wUrWPO+PauGiIuG/D2dmfuUNvSTRcIe7UQLXrfP3yyfZPgqsH6pSnNEVopquQKy3KjzqepgriOJtbyY="

notifications:
  email:
    on_success: never
